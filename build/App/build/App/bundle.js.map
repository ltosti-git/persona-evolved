{"version":3,"sources":["app.js","azienda/azienda.module.js","azienda/azienda.route.js","azienda/azienda.controller.js","azienda/azienda.service.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdfile":"../../bundle.js","sourcesContent":["(function(){\n  'use strict';\nconsole.log('App');\n  var App = angular.module('App',[\n    'ngRoute',\n    'ngResource',\n\n    'App.azienda',\n\n  ]);\n\n\n\n })();\n","(function(){\n  'use strict';\n\n  angular.module('App.azienda', []);\n\n})();\n","(function(){\n  'use strict';\n  angular.module('App.azienda')\n    .config(config);\n\n    function config($routeProvider){ console.log('Route');\n      $routeProvider\n        .when('/', {\n          templateUrl:'/App/view/azienda/template/azienda.template.html',\n          controller:'aziendaController',\n          controllerAs: 'vm'\n        });\n    }\n})();\n","(function(){\n  'use strict';\n\n  angular.module('App.azienda')\n    .controller('aziendaController', aziendaController);\n\n    aziendaController.$inject = ['AziendaService', '$location'];\n\n    function aziendaController(AziendaService, $location){ console.log('Controller');\n      var vm = this;\n      vm.newAzienda = {};\n\n      vm.reparti = [\n      'modelleria',\n      'taglio',\n      'tranceria',\n      'giunteria',\n      'montaggio',\n      'fondo',\n      'finissaggio',\n      'guarnitura',\n      'magazzino',\n      'manutenzione'\n    ];\n\n    vm.selection = [];\n\n    vm.toggleSelection = function toggleSelection(reparto) {console.log(reparto);\n      var idx = vm.reparti.indexOf(reparto);console.log(idx);\n      if (idx > -1) {\n        vm.selection.push(reparto);console.log(vm.selection);\n      }\n      else {\n        vm.selection.splice(idx, 1);\n      }\n    };\n\n\n      vm.getMyAzienda = function(){\n        return AziendaService.getAzienda()\n        // then catch promise\n        .then(function(data){\n          vm.azienda = data; //console.log(vm.azienda['']);\n          return\n        }).catch(function(err){\n          return err;\n        });\n      };\n\n      vm.getMyDipendenti = function(){\n        return AziendaService.getDipendenti()\n        .then(function(data){ //console.log(data);\n          vm.dipendenti = data;\n          return\n        }).catch(function(err){\n          return err;\n        });\n      };\n\n      vm.detailsAzienda = function(azienda) {\n        //vm.newAzienda = angular.copy(azienda);\n        vm.newAzienda.id = azienda._id;\n        vm.newAzienda.nome = azienda.nome;\n        vm.newAzienda.tipo = azienda.tipo;\n        vm.newAzienda.dipendenti = azienda.dipendenti;\n        vm.newAzienda.fatturato = azienda.fatturato;\n        vm.newAzienda.commesse = azienda.commesse;\n        vm.newAzienda.commesseTot = azienda.commesseTot;\n        vm.newAzienda.reparti = azienda.selection;\n        //$location.path('/azienda/details/' + vm.newAzienda.id);\n      }\n\n\n\n      vm.saveMyAzienda = function() { console.log(vm.newAzienda.id);\n\n        if(!vm.newAzienda.id) { console.log('save');\n        return AziendaService.saveAzienda(vm.newAzienda)\n          .then(function(){\n            vm.getMyAzienda();\n            return vm.newAzienda = {};\n          }).catch(function(err){ console.log(err);\n            return err;\n          });\n        } else { console.log('edit');\n          return AziendaService.editAzienda(vm.newAzienda)\n          .then(function() {\n            vm.getMyAzienda();\n            return vm.newAzienda = {};\n          }).catch (function(err){\n            return err;\n          });\n\n        }\n      };\n\n      vm.deleteMyAzienda = function(id) { //console.log(id);\n        return AziendaService.deleteAzienda(id)\n          .then(function(){\n            vm.getMyAzienda();\n            return vm.newAzienda = {};\n          }).catch(function(err){\n            return err;\n          })\n      }\n    }\n})();\n","(function(){\n  'use strict';\n\n  angular.module('App.azienda')\n    .factory('AziendaService',AziendaService);\n\n    AziendaService.$inject = ['$resource'];\n\n    function AziendaService($resource){ console.log('Service');\n\n      var Azienda = $resource('/azienda/', {azienda:'@azienda'}, {'getAll':{method: 'GET', isArray: true}, 'save': {method: 'POST'}});\n      var delAzienda = $resource('/azienda/:id', {id:'@id'}, {'delete': {method: 'DELETE'}});\n      var edAzienda = $resource('/azienda/:id', {id:'@id'}, {'edit': {method: 'PUT'}, 'get': {method: 'GET'}});\n      var Dipendenti = $resource('/dipendenti/', null, {'getAll': {method: 'GET', isArray:true}});\n      return{\n        getAzienda: getAzienda,\n        saveAzienda: saveAzienda,\n        deleteAzienda: deleteAzienda,\n        editAzienda: editAzienda,\n        getMyAziendaDet: getMyAziendaDet,\n        getDipendenti: getDipendenti\n      };\n\n      function getAzienda(callback){\n        callback = callback || angular.noop;\n        return Azienda.getAll(function(azienda){\n          return callback(azienda);\n        }, function(err){\n          return callback(err);\n        }).$promise;\n      }\n\n      function getDipendenti(callback){\n        callback = callback || angular.noop;\n        return Dipendenti.getAll(function(dipendente){\n          return callback(dipendente);\n        }, function(err){\n          return callback(err);\n        }).$promise;\n      }\n\n      function saveAzienda(newAzienda, callback){   //rifarla con la promise\n        callback = callback || angular.noop;\n        //console.log(newAzienda);\n        return Azienda.save(newAzienda, function(data){\n          return callback(data);\n        }, function(err) {\n          return callback(err);\n        }).$promise;\n\n      }\n\n      function deleteAzienda(id, callback) { //console.log(id);\n        callback = callback || angular.noop;\n        return delAzienda.delete({'id':id}, function(){\n          return callback('del ok');\n        }, function(err){\n          return callback(err);\n        }).$promise;\n\n      }\n\n      function editAzienda(azienda, callback) { console.log(azienda);\n        callback = callback || angular.noop;\n        return edAzienda.edit(azienda, function(data){\n          return callback(data);\n        }, function(err) {\n          return callback(err);\n        }).$promise;\n      }\n\n      function getMyAziendaDet(id, callback) { //console.log(id);\n        callback = callback || angular.noop;\n        return edWeapons.get({'id': id}, function(data){\n          return callback(data);\n        }, function(err) {\n          return callback(err);\n        }).$promise;\n      }\n\n\n    }\n\n})();\n"]}